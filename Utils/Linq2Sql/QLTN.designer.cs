#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Utils.Linq2Sql
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LTUDQL")]
	public partial class QLTNDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCapHoc(CapHoc instance);
    partial void UpdateCapHoc(CapHoc instance);
    partial void DeleteCapHoc(CapHoc instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    partial void InsertCapHoc_MonHoc(CapHoc_MonHoc instance);
    partial void UpdateCapHoc_MonHoc(CapHoc_MonHoc instance);
    partial void DeleteCapHoc_MonHoc(CapHoc_MonHoc instance);
    partial void InsertCauHoi(CauHoi instance);
    partial void UpdateCauHoi(CauHoi instance);
    partial void DeleteCauHoi(CauHoi instance);
    partial void InsertDapAn(DapAn instance);
    partial void UpdateDapAn(DapAn instance);
    partial void DeleteDapAn(DapAn instance);
    partial void InsertDeThi(DeThi instance);
    partial void UpdateDeThi(DeThi instance);
    partial void DeleteDeThi(DeThi instance);
    partial void InsertDeThi_CauHoi(DeThi_CauHoi instance);
    partial void UpdateDeThi_CauHoi(DeThi_CauHoi instance);
    partial void DeleteDeThi_CauHoi(DeThi_CauHoi instance);
    partial void InsertHocSinhLamBai(HocSinhLamBai instance);
    partial void UpdateHocSinhLamBai(HocSinhLamBai instance);
    partial void DeleteHocSinhLamBai(HocSinhLamBai instance);
    partial void InsertHocSinhThamGia(HocSinhThamGia instance);
    partial void UpdateHocSinhThamGia(HocSinhThamGia instance);
    partial void DeleteHocSinhThamGia(HocSinhThamGia instance);
    partial void InsertKyThi(KyThi instance);
    partial void UpdateKyThi(KyThi instance);
    partial void DeleteKyThi(KyThi instance);
    partial void InsertLopHoc(LopHoc instance);
    partial void UpdateLopHoc(LopHoc instance);
    partial void DeleteLopHoc(LopHoc instance);
    partial void InsertMonHoc(MonHoc instance);
    partial void UpdateMonHoc(MonHoc instance);
    partial void DeleteMonHoc(MonHoc instance);
    #endregion
		
		public QLTNDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLTNDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLTNDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLTNDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CapHoc> CapHocs
		{
			get
			{
				return this.GetTable<CapHoc>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<CapHoc_MonHoc> CapHoc_MonHocs
		{
			get
			{
				return this.GetTable<CapHoc_MonHoc>();
			}
		}
		
		public System.Data.Linq.Table<CauHoi> CauHois
		{
			get
			{
				return this.GetTable<CauHoi>();
			}
		}
		
		public System.Data.Linq.Table<DapAn> DapAns
		{
			get
			{
				return this.GetTable<DapAn>();
			}
		}
		
		public System.Data.Linq.Table<DeThi> DeThis
		{
			get
			{
				return this.GetTable<DeThi>();
			}
		}
		
		public System.Data.Linq.Table<DeThi_CauHoi> DeThi_CauHois
		{
			get
			{
				return this.GetTable<DeThi_CauHoi>();
			}
		}
		
		public System.Data.Linq.Table<HocSinhLamBai> HocSinhLamBais
		{
			get
			{
				return this.GetTable<HocSinhLamBai>();
			}
		}
		
		public System.Data.Linq.Table<HocSinhThamGia> HocSinhThamGias
		{
			get
			{
				return this.GetTable<HocSinhThamGia>();
			}
		}
		
		public System.Data.Linq.Table<KyThi> KyThis
		{
			get
			{
				return this.GetTable<KyThi>();
			}
		}
		
		public System.Data.Linq.Table<LopHoc> LopHocs
		{
			get
			{
				return this.GetTable<LopHoc>();
			}
		}
		
		public System.Data.Linq.Table<MonHoc> MonHocs
		{
			get
			{
				return this.GetTable<MonHoc>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CapHoc")]
	public partial class CapHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tencap;
		
		private EntitySet<CapHoc_MonHoc> _CapHoc_MonHocs;
		
		private EntitySet<LopHoc> _LopHocs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntencapChanging(string value);
    partial void OntencapChanged();
    #endregion
		
		public CapHoc()
		{
			this._CapHoc_MonHocs = new EntitySet<CapHoc_MonHoc>(new Action<CapHoc_MonHoc>(this.attach_CapHoc_MonHocs), new Action<CapHoc_MonHoc>(this.detach_CapHoc_MonHocs));
			this._LopHocs = new EntitySet<LopHoc>(new Action<LopHoc>(this.attach_LopHocs), new Action<LopHoc>(this.detach_LopHocs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tencap", DbType="NVarChar(255)")]
		public string tencap
		{
			get
			{
				return this._tencap;
			}
			set
			{
				if ((this._tencap != value))
				{
					this.OntencapChanging(value);
					this.SendPropertyChanging();
					this._tencap = value;
					this.SendPropertyChanged("tencap");
					this.OntencapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CapHoc_CapHoc_MonHoc", Storage="_CapHoc_MonHocs", ThisKey="id", OtherKey="caphocid")]
		public EntitySet<CapHoc_MonHoc> CapHoc_MonHocs
		{
			get
			{
				return this._CapHoc_MonHocs;
			}
			set
			{
				this._CapHoc_MonHocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CapHoc_LopHoc", Storage="_LopHocs", ThisKey="id", OtherKey="caphocid")]
		public EntitySet<LopHoc> LopHocs
		{
			get
			{
				return this._LopHocs;
			}
			set
			{
				this._LopHocs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CapHoc_MonHocs(CapHoc_MonHoc entity)
		{
			this.SendPropertyChanging();
			entity.CapHoc = this;
		}
		
		private void detach_CapHoc_MonHocs(CapHoc_MonHoc entity)
		{
			this.SendPropertyChanging();
			entity.CapHoc = null;
		}
		
		private void attach_LopHocs(LopHoc entity)
		{
			this.SendPropertyChanging();
			entity.CapHoc = this;
		}
		
		private void detach_LopHocs(LopHoc entity)
		{
			this.SendPropertyChanging();
			entity.CapHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tentaikhoan;
		
		private string _matkhau;
		
		private string _hoten;
		
		private System.Nullable<System.DateTime> _ngaysinh;
		
		private System.Nullable<int> _permission;
		
		private System.Nullable<int> _lophocid;
		
		private EntitySet<CauHoi> _CauHois;
		
		private EntitySet<HocSinhLamBai> _HocSinhLamBais;
		
		private EntitySet<HocSinhThamGia> _HocSinhThamGias;
		
		private EntityRef<LopHoc> _LopHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntentaikhoanChanging(string value);
    partial void OntentaikhoanChanged();
    partial void OnmatkhauChanging(string value);
    partial void OnmatkhauChanged();
    partial void OnhotenChanging(string value);
    partial void OnhotenChanged();
    partial void OnngaysinhChanging(System.Nullable<System.DateTime> value);
    partial void OnngaysinhChanged();
    partial void OnpermissionChanging(System.Nullable<int> value);
    partial void OnpermissionChanged();
    partial void OnlophocidChanging(System.Nullable<int> value);
    partial void OnlophocidChanged();
    #endregion
		
		public TaiKhoan()
		{
			this._CauHois = new EntitySet<CauHoi>(new Action<CauHoi>(this.attach_CauHois), new Action<CauHoi>(this.detach_CauHois));
			this._HocSinhLamBais = new EntitySet<HocSinhLamBai>(new Action<HocSinhLamBai>(this.attach_HocSinhLamBais), new Action<HocSinhLamBai>(this.detach_HocSinhLamBais));
			this._HocSinhThamGias = new EntitySet<HocSinhThamGia>(new Action<HocSinhThamGia>(this.attach_HocSinhThamGias), new Action<HocSinhThamGia>(this.detach_HocSinhThamGias));
			this._LopHoc = default(EntityRef<LopHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tentaikhoan", DbType="VarChar(255)")]
		public string tentaikhoan
		{
			get
			{
				return this._tentaikhoan;
			}
			set
			{
				if ((this._tentaikhoan != value))
				{
					this.OntentaikhoanChanging(value);
					this.SendPropertyChanging();
					this._tentaikhoan = value;
					this.SendPropertyChanged("tentaikhoan");
					this.OntentaikhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_matkhau", DbType="VarChar(255)")]
		public string matkhau
		{
			get
			{
				return this._matkhau;
			}
			set
			{
				if ((this._matkhau != value))
				{
					this.OnmatkhauChanging(value);
					this.SendPropertyChanging();
					this._matkhau = value;
					this.SendPropertyChanged("matkhau");
					this.OnmatkhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hoten", DbType="NVarChar(255)")]
		public string hoten
		{
			get
			{
				return this._hoten;
			}
			set
			{
				if ((this._hoten != value))
				{
					this.OnhotenChanging(value);
					this.SendPropertyChanging();
					this._hoten = value;
					this.SendPropertyChanged("hoten");
					this.OnhotenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaysinh", DbType="Date")]
		public System.Nullable<System.DateTime> ngaysinh
		{
			get
			{
				return this._ngaysinh;
			}
			set
			{
				if ((this._ngaysinh != value))
				{
					this.OnngaysinhChanging(value);
					this.SendPropertyChanging();
					this._ngaysinh = value;
					this.SendPropertyChanged("ngaysinh");
					this.OnngaysinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permission", DbType="Int")]
		public System.Nullable<int> permission
		{
			get
			{
				return this._permission;
			}
			set
			{
				if ((this._permission != value))
				{
					this.OnpermissionChanging(value);
					this.SendPropertyChanging();
					this._permission = value;
					this.SendPropertyChanged("permission");
					this.OnpermissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lophocid", DbType="Int")]
		public System.Nullable<int> lophocid
		{
			get
			{
				return this._lophocid;
			}
			set
			{
				if ((this._lophocid != value))
				{
					if (this._LopHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlophocidChanging(value);
					this.SendPropertyChanging();
					this._lophocid = value;
					this.SendPropertyChanged("lophocid");
					this.OnlophocidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_CauHoi", Storage="_CauHois", ThisKey="id", OtherKey="donggop")]
		public EntitySet<CauHoi> CauHois
		{
			get
			{
				return this._CauHois;
			}
			set
			{
				this._CauHois.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_HocSinhLamBai", Storage="_HocSinhLamBais", ThisKey="id", OtherKey="hocsinhid")]
		public EntitySet<HocSinhLamBai> HocSinhLamBais
		{
			get
			{
				return this._HocSinhLamBais;
			}
			set
			{
				this._HocSinhLamBais.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_HocSinhThamGia", Storage="_HocSinhThamGias", ThisKey="id", OtherKey="hocsinhid")]
		public EntitySet<HocSinhThamGia> HocSinhThamGias
		{
			get
			{
				return this._HocSinhThamGias;
			}
			set
			{
				this._HocSinhThamGias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_TaiKhoan", Storage="_LopHoc", ThisKey="lophocid", OtherKey="id", IsForeignKey=true)]
		public LopHoc LopHoc
		{
			get
			{
				return this._LopHoc.Entity;
			}
			set
			{
				LopHoc previousValue = this._LopHoc.Entity;
				if (((previousValue != value) 
							|| (this._LopHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LopHoc.Entity = null;
						previousValue.TaiKhoans.Remove(this);
					}
					this._LopHoc.Entity = value;
					if ((value != null))
					{
						value.TaiKhoans.Add(this);
						this._lophocid = value.id;
					}
					else
					{
						this._lophocid = default(Nullable<int>);
					}
					this.SendPropertyChanged("LopHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CauHois(CauHoi entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_CauHois(CauHoi entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
		
		private void attach_HocSinhLamBais(HocSinhLamBai entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_HocSinhLamBais(HocSinhLamBai entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
		
		private void attach_HocSinhThamGias(HocSinhThamGia entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_HocSinhThamGias(HocSinhThamGia entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CapHoc_MonHoc")]
	public partial class CapHoc_MonHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _caphocid;
		
		private int _monhocid;
		
		private EntitySet<CauHoi> _CauHois;
		
		private EntitySet<DeThi> _DeThis;
		
		private EntityRef<CapHoc> _CapHoc;
		
		private EntityRef<MonHoc> _MonHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncaphocidChanging(int value);
    partial void OncaphocidChanged();
    partial void OnmonhocidChanging(int value);
    partial void OnmonhocidChanged();
    #endregion
		
		public CapHoc_MonHoc()
		{
			this._CauHois = new EntitySet<CauHoi>(new Action<CauHoi>(this.attach_CauHois), new Action<CauHoi>(this.detach_CauHois));
			this._DeThis = new EntitySet<DeThi>(new Action<DeThi>(this.attach_DeThis), new Action<DeThi>(this.detach_DeThis));
			this._CapHoc = default(EntityRef<CapHoc>);
			this._MonHoc = default(EntityRef<MonHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caphocid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int caphocid
		{
			get
			{
				return this._caphocid;
			}
			set
			{
				if ((this._caphocid != value))
				{
					if (this._CapHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncaphocidChanging(value);
					this.SendPropertyChanging();
					this._caphocid = value;
					this.SendPropertyChanged("caphocid");
					this.OncaphocidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monhocid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int monhocid
		{
			get
			{
				return this._monhocid;
			}
			set
			{
				if ((this._monhocid != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmonhocidChanging(value);
					this.SendPropertyChanging();
					this._monhocid = value;
					this.SendPropertyChanged("monhocid");
					this.OnmonhocidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CapHoc_MonHoc_CauHoi", Storage="_CauHois", ThisKey="caphocid,monhocid", OtherKey="caphocid,monhocid")]
		public EntitySet<CauHoi> CauHois
		{
			get
			{
				return this._CauHois;
			}
			set
			{
				this._CauHois.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CapHoc_MonHoc_DeThi", Storage="_DeThis", ThisKey="caphocid,monhocid", OtherKey="caphocid,monhocid")]
		public EntitySet<DeThi> DeThis
		{
			get
			{
				return this._DeThis;
			}
			set
			{
				this._DeThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CapHoc_CapHoc_MonHoc", Storage="_CapHoc", ThisKey="caphocid", OtherKey="id", IsForeignKey=true)]
		public CapHoc CapHoc
		{
			get
			{
				return this._CapHoc.Entity;
			}
			set
			{
				CapHoc previousValue = this._CapHoc.Entity;
				if (((previousValue != value) 
							|| (this._CapHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CapHoc.Entity = null;
						previousValue.CapHoc_MonHocs.Remove(this);
					}
					this._CapHoc.Entity = value;
					if ((value != null))
					{
						value.CapHoc_MonHocs.Add(this);
						this._caphocid = value.id;
					}
					else
					{
						this._caphocid = default(int);
					}
					this.SendPropertyChanged("CapHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_CapHoc_MonHoc", Storage="_MonHoc", ThisKey="monhocid", OtherKey="id", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.CapHoc_MonHocs.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.CapHoc_MonHocs.Add(this);
						this._monhocid = value.id;
					}
					else
					{
						this._monhocid = default(int);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CauHois(CauHoi entity)
		{
			this.SendPropertyChanging();
			entity.CapHoc_MonHoc = this;
		}
		
		private void detach_CauHois(CauHoi entity)
		{
			this.SendPropertyChanging();
			entity.CapHoc_MonHoc = null;
		}
		
		private void attach_DeThis(DeThi entity)
		{
			this.SendPropertyChanging();
			entity.CapHoc_MonHoc = this;
		}
		
		private void detach_DeThis(DeThi entity)
		{
			this.SendPropertyChanging();
			entity.CapHoc_MonHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CauHoi")]
	public partial class CauHoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _noidung;
		
		private string _goiy;
		
		private System.Nullable<int> _dokho;
		
		private System.Nullable<int> _caphocid;
		
		private System.Nullable<int> _monhocid;
		
		private System.Nullable<int> _donggop;
		
		private System.Nullable<int> _trangthai;
		
		private EntitySet<DapAn> _DapAns;
		
		private EntitySet<DeThi_CauHoi> _DeThi_CauHois;
		
		private EntityRef<CapHoc_MonHoc> _CapHoc_MonHoc;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnoidungChanging(string value);
    partial void OnnoidungChanged();
    partial void OngoiyChanging(string value);
    partial void OngoiyChanged();
    partial void OndokhoChanging(System.Nullable<int> value);
    partial void OndokhoChanged();
    partial void OncaphocidChanging(System.Nullable<int> value);
    partial void OncaphocidChanged();
    partial void OnmonhocidChanging(System.Nullable<int> value);
    partial void OnmonhocidChanged();
    partial void OndonggopChanging(System.Nullable<int> value);
    partial void OndonggopChanged();
    partial void OntrangthaiChanging(System.Nullable<int> value);
    partial void OntrangthaiChanged();
    #endregion
		
		public CauHoi()
		{
			this._DapAns = new EntitySet<DapAn>(new Action<DapAn>(this.attach_DapAns), new Action<DapAn>(this.detach_DapAns));
			this._DeThi_CauHois = new EntitySet<DeThi_CauHoi>(new Action<DeThi_CauHoi>(this.attach_DeThi_CauHois), new Action<DeThi_CauHoi>(this.detach_DeThi_CauHois));
			this._CapHoc_MonHoc = default(EntityRef<CapHoc_MonHoc>);
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noidung", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string noidung
		{
			get
			{
				return this._noidung;
			}
			set
			{
				if ((this._noidung != value))
				{
					this.OnnoidungChanging(value);
					this.SendPropertyChanging();
					this._noidung = value;
					this.SendPropertyChanged("noidung");
					this.OnnoidungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goiy", DbType="NVarChar(255)")]
		public string goiy
		{
			get
			{
				return this._goiy;
			}
			set
			{
				if ((this._goiy != value))
				{
					this.OngoiyChanging(value);
					this.SendPropertyChanging();
					this._goiy = value;
					this.SendPropertyChanged("goiy");
					this.OngoiyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dokho", DbType="Int")]
		public System.Nullable<int> dokho
		{
			get
			{
				return this._dokho;
			}
			set
			{
				if ((this._dokho != value))
				{
					this.OndokhoChanging(value);
					this.SendPropertyChanging();
					this._dokho = value;
					this.SendPropertyChanged("dokho");
					this.OndokhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caphocid", DbType="Int")]
		public System.Nullable<int> caphocid
		{
			get
			{
				return this._caphocid;
			}
			set
			{
				if ((this._caphocid != value))
				{
					if (this._CapHoc_MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncaphocidChanging(value);
					this.SendPropertyChanging();
					this._caphocid = value;
					this.SendPropertyChanged("caphocid");
					this.OncaphocidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monhocid", DbType="Int")]
		public System.Nullable<int> monhocid
		{
			get
			{
				return this._monhocid;
			}
			set
			{
				if ((this._monhocid != value))
				{
					if (this._CapHoc_MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmonhocidChanging(value);
					this.SendPropertyChanging();
					this._monhocid = value;
					this.SendPropertyChanged("monhocid");
					this.OnmonhocidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_donggop", DbType="Int")]
		public System.Nullable<int> donggop
		{
			get
			{
				return this._donggop;
			}
			set
			{
				if ((this._donggop != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndonggopChanging(value);
					this.SendPropertyChanging();
					this._donggop = value;
					this.SendPropertyChanged("donggop");
					this.OndonggopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trangthai", DbType="Int")]
		public System.Nullable<int> trangthai
		{
			get
			{
				return this._trangthai;
			}
			set
			{
				if ((this._trangthai != value))
				{
					this.OntrangthaiChanging(value);
					this.SendPropertyChanging();
					this._trangthai = value;
					this.SendPropertyChanged("trangthai");
					this.OntrangthaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHoi_DapAn", Storage="_DapAns", ThisKey="id", OtherKey="cauhoiid")]
		public EntitySet<DapAn> DapAns
		{
			get
			{
				return this._DapAns;
			}
			set
			{
				this._DapAns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHoi_DeThi_CauHoi", Storage="_DeThi_CauHois", ThisKey="id", OtherKey="cauhoiid")]
		public EntitySet<DeThi_CauHoi> DeThi_CauHois
		{
			get
			{
				return this._DeThi_CauHois;
			}
			set
			{
				this._DeThi_CauHois.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CapHoc_MonHoc_CauHoi", Storage="_CapHoc_MonHoc", ThisKey="caphocid,monhocid", OtherKey="caphocid,monhocid", IsForeignKey=true)]
		public CapHoc_MonHoc CapHoc_MonHoc
		{
			get
			{
				return this._CapHoc_MonHoc.Entity;
			}
			set
			{
				CapHoc_MonHoc previousValue = this._CapHoc_MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._CapHoc_MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CapHoc_MonHoc.Entity = null;
						previousValue.CauHois.Remove(this);
					}
					this._CapHoc_MonHoc.Entity = value;
					if ((value != null))
					{
						value.CauHois.Add(this);
						this._caphocid = value.caphocid;
						this._monhocid = value.monhocid;
					}
					else
					{
						this._caphocid = default(Nullable<int>);
						this._monhocid = default(Nullable<int>);
					}
					this.SendPropertyChanged("CapHoc_MonHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_CauHoi", Storage="_TaiKhoan", ThisKey="donggop", OtherKey="id", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.CauHois.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.CauHois.Add(this);
						this._donggop = value.id;
					}
					else
					{
						this._donggop = default(Nullable<int>);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DapAns(DapAn entity)
		{
			this.SendPropertyChanging();
			entity.CauHoi = this;
		}
		
		private void detach_DapAns(DapAn entity)
		{
			this.SendPropertyChanging();
			entity.CauHoi = null;
		}
		
		private void attach_DeThi_CauHois(DeThi_CauHoi entity)
		{
			this.SendPropertyChanging();
			entity.CauHoi = this;
		}
		
		private void detach_DeThi_CauHois(DeThi_CauHoi entity)
		{
			this.SendPropertyChanging();
			entity.CauHoi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DapAn")]
	public partial class DapAn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cauhoiid;
		
		private int _stt;
		
		private string _noidung;
		
		private System.Nullable<bool> _dungsai;
		
		private EntityRef<CauHoi> _CauHoi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncauhoiidChanging(int value);
    partial void OncauhoiidChanged();
    partial void OnsttChanging(int value);
    partial void OnsttChanged();
    partial void OnnoidungChanging(string value);
    partial void OnnoidungChanged();
    partial void OndungsaiChanging(System.Nullable<bool> value);
    partial void OndungsaiChanged();
    #endregion
		
		public DapAn()
		{
			this._CauHoi = default(EntityRef<CauHoi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cauhoiid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int cauhoiid
		{
			get
			{
				return this._cauhoiid;
			}
			set
			{
				if ((this._cauhoiid != value))
				{
					if (this._CauHoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncauhoiidChanging(value);
					this.SendPropertyChanging();
					this._cauhoiid = value;
					this.SendPropertyChanged("cauhoiid");
					this.OncauhoiidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stt", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int stt
		{
			get
			{
				return this._stt;
			}
			set
			{
				if ((this._stt != value))
				{
					this.OnsttChanging(value);
					this.SendPropertyChanging();
					this._stt = value;
					this.SendPropertyChanged("stt");
					this.OnsttChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noidung", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string noidung
		{
			get
			{
				return this._noidung;
			}
			set
			{
				if ((this._noidung != value))
				{
					this.OnnoidungChanging(value);
					this.SendPropertyChanging();
					this._noidung = value;
					this.SendPropertyChanged("noidung");
					this.OnnoidungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dungsai", DbType="Bit")]
		public System.Nullable<bool> dungsai
		{
			get
			{
				return this._dungsai;
			}
			set
			{
				if ((this._dungsai != value))
				{
					this.OndungsaiChanging(value);
					this.SendPropertyChanging();
					this._dungsai = value;
					this.SendPropertyChanged("dungsai");
					this.OndungsaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHoi_DapAn", Storage="_CauHoi", ThisKey="cauhoiid", OtherKey="id", IsForeignKey=true)]
		public CauHoi CauHoi
		{
			get
			{
				return this._CauHoi.Entity;
			}
			set
			{
				CauHoi previousValue = this._CauHoi.Entity;
				if (((previousValue != value) 
							|| (this._CauHoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CauHoi.Entity = null;
						previousValue.DapAns.Remove(this);
					}
					this._CauHoi.Entity = value;
					if ((value != null))
					{
						value.DapAns.Add(this);
						this._cauhoiid = value.id;
					}
					else
					{
						this._cauhoiid = default(int);
					}
					this.SendPropertyChanged("CauHoi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeThi")]
	public partial class DeThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _loaidethi;
		
		private System.Nullable<int> _thoigiantoida;
		
		private System.Nullable<int> _caphocid;
		
		private System.Nullable<int> _monhocid;
		
		private System.Nullable<int> _kythiid;
		
		private EntitySet<DeThi_CauHoi> _DeThi_CauHois;
		
		private EntitySet<HocSinhThamGia> _HocSinhThamGias;
		
		private EntityRef<CapHoc_MonHoc> _CapHoc_MonHoc;
		
		private EntityRef<KyThi> _KyThi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnloaidethiChanging(System.Nullable<int> value);
    partial void OnloaidethiChanged();
    partial void OnthoigiantoidaChanging(System.Nullable<int> value);
    partial void OnthoigiantoidaChanged();
    partial void OncaphocidChanging(System.Nullable<int> value);
    partial void OncaphocidChanged();
    partial void OnmonhocidChanging(System.Nullable<int> value);
    partial void OnmonhocidChanged();
    partial void OnkythiidChanging(System.Nullable<int> value);
    partial void OnkythiidChanged();
    #endregion
		
		public DeThi()
		{
			this._DeThi_CauHois = new EntitySet<DeThi_CauHoi>(new Action<DeThi_CauHoi>(this.attach_DeThi_CauHois), new Action<DeThi_CauHoi>(this.detach_DeThi_CauHois));
			this._HocSinhThamGias = new EntitySet<HocSinhThamGia>(new Action<HocSinhThamGia>(this.attach_HocSinhThamGias), new Action<HocSinhThamGia>(this.detach_HocSinhThamGias));
			this._CapHoc_MonHoc = default(EntityRef<CapHoc_MonHoc>);
			this._KyThi = default(EntityRef<KyThi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loaidethi", DbType="Int")]
		public System.Nullable<int> loaidethi
		{
			get
			{
				return this._loaidethi;
			}
			set
			{
				if ((this._loaidethi != value))
				{
					this.OnloaidethiChanging(value);
					this.SendPropertyChanging();
					this._loaidethi = value;
					this.SendPropertyChanged("loaidethi");
					this.OnloaidethiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thoigiantoida", DbType="Int")]
		public System.Nullable<int> thoigiantoida
		{
			get
			{
				return this._thoigiantoida;
			}
			set
			{
				if ((this._thoigiantoida != value))
				{
					this.OnthoigiantoidaChanging(value);
					this.SendPropertyChanging();
					this._thoigiantoida = value;
					this.SendPropertyChanged("thoigiantoida");
					this.OnthoigiantoidaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caphocid", DbType="Int")]
		public System.Nullable<int> caphocid
		{
			get
			{
				return this._caphocid;
			}
			set
			{
				if ((this._caphocid != value))
				{
					if (this._CapHoc_MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncaphocidChanging(value);
					this.SendPropertyChanging();
					this._caphocid = value;
					this.SendPropertyChanged("caphocid");
					this.OncaphocidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monhocid", DbType="Int")]
		public System.Nullable<int> monhocid
		{
			get
			{
				return this._monhocid;
			}
			set
			{
				if ((this._monhocid != value))
				{
					if (this._CapHoc_MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmonhocidChanging(value);
					this.SendPropertyChanging();
					this._monhocid = value;
					this.SendPropertyChanged("monhocid");
					this.OnmonhocidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kythiid", DbType="Int")]
		public System.Nullable<int> kythiid
		{
			get
			{
				return this._kythiid;
			}
			set
			{
				if ((this._kythiid != value))
				{
					if (this._KyThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnkythiidChanging(value);
					this.SendPropertyChanging();
					this._kythiid = value;
					this.SendPropertyChanged("kythiid");
					this.OnkythiidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_DeThi_CauHoi", Storage="_DeThi_CauHois", ThisKey="id", OtherKey="dethiid")]
		public EntitySet<DeThi_CauHoi> DeThi_CauHois
		{
			get
			{
				return this._DeThi_CauHois;
			}
			set
			{
				this._DeThi_CauHois.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_HocSinhThamGia", Storage="_HocSinhThamGias", ThisKey="id", OtherKey="dethiid")]
		public EntitySet<HocSinhThamGia> HocSinhThamGias
		{
			get
			{
				return this._HocSinhThamGias;
			}
			set
			{
				this._HocSinhThamGias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CapHoc_MonHoc_DeThi", Storage="_CapHoc_MonHoc", ThisKey="caphocid,monhocid", OtherKey="caphocid,monhocid", IsForeignKey=true)]
		public CapHoc_MonHoc CapHoc_MonHoc
		{
			get
			{
				return this._CapHoc_MonHoc.Entity;
			}
			set
			{
				CapHoc_MonHoc previousValue = this._CapHoc_MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._CapHoc_MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CapHoc_MonHoc.Entity = null;
						previousValue.DeThis.Remove(this);
					}
					this._CapHoc_MonHoc.Entity = value;
					if ((value != null))
					{
						value.DeThis.Add(this);
						this._caphocid = value.caphocid;
						this._monhocid = value.monhocid;
					}
					else
					{
						this._caphocid = default(Nullable<int>);
						this._monhocid = default(Nullable<int>);
					}
					this.SendPropertyChanged("CapHoc_MonHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KyThi_DeThi", Storage="_KyThi", ThisKey="kythiid", OtherKey="id", IsForeignKey=true)]
		public KyThi KyThi
		{
			get
			{
				return this._KyThi.Entity;
			}
			set
			{
				KyThi previousValue = this._KyThi.Entity;
				if (((previousValue != value) 
							|| (this._KyThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KyThi.Entity = null;
						previousValue.DeThis.Remove(this);
					}
					this._KyThi.Entity = value;
					if ((value != null))
					{
						value.DeThis.Add(this);
						this._kythiid = value.id;
					}
					else
					{
						this._kythiid = default(Nullable<int>);
					}
					this.SendPropertyChanged("KyThi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DeThi_CauHois(DeThi_CauHoi entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = this;
		}
		
		private void detach_DeThi_CauHois(DeThi_CauHoi entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = null;
		}
		
		private void attach_HocSinhThamGias(HocSinhThamGia entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = this;
		}
		
		private void detach_HocSinhThamGias(HocSinhThamGia entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeThi_CauHoi")]
	public partial class DeThi_CauHoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _dethiid;
		
		private int _cauhoiid;
		
		private EntitySet<HocSinhLamBai> _HocSinhLamBais;
		
		private EntityRef<CauHoi> _CauHoi;
		
		private EntityRef<DeThi> _DeThi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndethiidChanging(int value);
    partial void OndethiidChanged();
    partial void OncauhoiidChanging(int value);
    partial void OncauhoiidChanged();
    #endregion
		
		public DeThi_CauHoi()
		{
			this._HocSinhLamBais = new EntitySet<HocSinhLamBai>(new Action<HocSinhLamBai>(this.attach_HocSinhLamBais), new Action<HocSinhLamBai>(this.detach_HocSinhLamBais));
			this._CauHoi = default(EntityRef<CauHoi>);
			this._DeThi = default(EntityRef<DeThi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dethiid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int dethiid
		{
			get
			{
				return this._dethiid;
			}
			set
			{
				if ((this._dethiid != value))
				{
					if (this._DeThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndethiidChanging(value);
					this.SendPropertyChanging();
					this._dethiid = value;
					this.SendPropertyChanged("dethiid");
					this.OndethiidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cauhoiid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int cauhoiid
		{
			get
			{
				return this._cauhoiid;
			}
			set
			{
				if ((this._cauhoiid != value))
				{
					if (this._CauHoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncauhoiidChanging(value);
					this.SendPropertyChanging();
					this._cauhoiid = value;
					this.SendPropertyChanged("cauhoiid");
					this.OncauhoiidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_CauHoi_HocSinhLamBai", Storage="_HocSinhLamBais", ThisKey="dethiid,cauhoiid", OtherKey="dethiid,cauhoiid")]
		public EntitySet<HocSinhLamBai> HocSinhLamBais
		{
			get
			{
				return this._HocSinhLamBais;
			}
			set
			{
				this._HocSinhLamBais.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHoi_DeThi_CauHoi", Storage="_CauHoi", ThisKey="cauhoiid", OtherKey="id", IsForeignKey=true)]
		public CauHoi CauHoi
		{
			get
			{
				return this._CauHoi.Entity;
			}
			set
			{
				CauHoi previousValue = this._CauHoi.Entity;
				if (((previousValue != value) 
							|| (this._CauHoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CauHoi.Entity = null;
						previousValue.DeThi_CauHois.Remove(this);
					}
					this._CauHoi.Entity = value;
					if ((value != null))
					{
						value.DeThi_CauHois.Add(this);
						this._cauhoiid = value.id;
					}
					else
					{
						this._cauhoiid = default(int);
					}
					this.SendPropertyChanged("CauHoi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_DeThi_CauHoi", Storage="_DeThi", ThisKey="dethiid", OtherKey="id", IsForeignKey=true)]
		public DeThi DeThi
		{
			get
			{
				return this._DeThi.Entity;
			}
			set
			{
				DeThi previousValue = this._DeThi.Entity;
				if (((previousValue != value) 
							|| (this._DeThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeThi.Entity = null;
						previousValue.DeThi_CauHois.Remove(this);
					}
					this._DeThi.Entity = value;
					if ((value != null))
					{
						value.DeThi_CauHois.Add(this);
						this._dethiid = value.id;
					}
					else
					{
						this._dethiid = default(int);
					}
					this.SendPropertyChanged("DeThi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HocSinhLamBais(HocSinhLamBai entity)
		{
			this.SendPropertyChanging();
			entity.DeThi_CauHoi = this;
		}
		
		private void detach_HocSinhLamBais(HocSinhLamBai entity)
		{
			this.SendPropertyChanging();
			entity.DeThi_CauHoi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocSinhLamBai")]
	public partial class HocSinhLamBai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _hocsinhid;
		
		private int _dethiid;
		
		private int _cauhoiid;
		
		private System.Nullable<bool> _dungsai;
		
		private EntityRef<DeThi_CauHoi> _DeThi_CauHoi;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnhocsinhidChanging(int value);
    partial void OnhocsinhidChanged();
    partial void OndethiidChanging(int value);
    partial void OndethiidChanged();
    partial void OncauhoiidChanging(int value);
    partial void OncauhoiidChanged();
    partial void OndungsaiChanging(System.Nullable<bool> value);
    partial void OndungsaiChanged();
    #endregion
		
		public HocSinhLamBai()
		{
			this._DeThi_CauHoi = default(EntityRef<DeThi_CauHoi>);
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hocsinhid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int hocsinhid
		{
			get
			{
				return this._hocsinhid;
			}
			set
			{
				if ((this._hocsinhid != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnhocsinhidChanging(value);
					this.SendPropertyChanging();
					this._hocsinhid = value;
					this.SendPropertyChanged("hocsinhid");
					this.OnhocsinhidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dethiid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int dethiid
		{
			get
			{
				return this._dethiid;
			}
			set
			{
				if ((this._dethiid != value))
				{
					if (this._DeThi_CauHoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndethiidChanging(value);
					this.SendPropertyChanging();
					this._dethiid = value;
					this.SendPropertyChanged("dethiid");
					this.OndethiidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cauhoiid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int cauhoiid
		{
			get
			{
				return this._cauhoiid;
			}
			set
			{
				if ((this._cauhoiid != value))
				{
					if (this._DeThi_CauHoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncauhoiidChanging(value);
					this.SendPropertyChanging();
					this._cauhoiid = value;
					this.SendPropertyChanged("cauhoiid");
					this.OncauhoiidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dungsai", DbType="Bit")]
		public System.Nullable<bool> dungsai
		{
			get
			{
				return this._dungsai;
			}
			set
			{
				if ((this._dungsai != value))
				{
					this.OndungsaiChanging(value);
					this.SendPropertyChanging();
					this._dungsai = value;
					this.SendPropertyChanged("dungsai");
					this.OndungsaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_CauHoi_HocSinhLamBai", Storage="_DeThi_CauHoi", ThisKey="dethiid,cauhoiid", OtherKey="dethiid,cauhoiid", IsForeignKey=true)]
		public DeThi_CauHoi DeThi_CauHoi
		{
			get
			{
				return this._DeThi_CauHoi.Entity;
			}
			set
			{
				DeThi_CauHoi previousValue = this._DeThi_CauHoi.Entity;
				if (((previousValue != value) 
							|| (this._DeThi_CauHoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeThi_CauHoi.Entity = null;
						previousValue.HocSinhLamBais.Remove(this);
					}
					this._DeThi_CauHoi.Entity = value;
					if ((value != null))
					{
						value.HocSinhLamBais.Add(this);
						this._dethiid = value.dethiid;
						this._cauhoiid = value.cauhoiid;
					}
					else
					{
						this._dethiid = default(int);
						this._cauhoiid = default(int);
					}
					this.SendPropertyChanged("DeThi_CauHoi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_HocSinhLamBai", Storage="_TaiKhoan", ThisKey="hocsinhid", OtherKey="id", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.HocSinhLamBais.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.HocSinhLamBais.Add(this);
						this._hocsinhid = value.id;
					}
					else
					{
						this._hocsinhid = default(int);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocSinhThamGia")]
	public partial class HocSinhThamGia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _hocsinhid;
		
		private int _dethiid;
		
		private System.Nullable<int> _socaudung;
		
		private System.Nullable<decimal> _thoigianlambai;
		
		private EntityRef<DeThi> _DeThi;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnhocsinhidChanging(int value);
    partial void OnhocsinhidChanged();
    partial void OndethiidChanging(int value);
    partial void OndethiidChanged();
    partial void OnsocaudungChanging(System.Nullable<int> value);
    partial void OnsocaudungChanged();
    partial void OnthoigianlambaiChanging(System.Nullable<decimal> value);
    partial void OnthoigianlambaiChanged();
    #endregion
		
		public HocSinhThamGia()
		{
			this._DeThi = default(EntityRef<DeThi>);
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hocsinhid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int hocsinhid
		{
			get
			{
				return this._hocsinhid;
			}
			set
			{
				if ((this._hocsinhid != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnhocsinhidChanging(value);
					this.SendPropertyChanging();
					this._hocsinhid = value;
					this.SendPropertyChanged("hocsinhid");
					this.OnhocsinhidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dethiid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int dethiid
		{
			get
			{
				return this._dethiid;
			}
			set
			{
				if ((this._dethiid != value))
				{
					if (this._DeThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndethiidChanging(value);
					this.SendPropertyChanging();
					this._dethiid = value;
					this.SendPropertyChanged("dethiid");
					this.OndethiidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_socaudung", DbType="Int")]
		public System.Nullable<int> socaudung
		{
			get
			{
				return this._socaudung;
			}
			set
			{
				if ((this._socaudung != value))
				{
					this.OnsocaudungChanging(value);
					this.SendPropertyChanging();
					this._socaudung = value;
					this.SendPropertyChanged("socaudung");
					this.OnsocaudungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thoigianlambai", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> thoigianlambai
		{
			get
			{
				return this._thoigianlambai;
			}
			set
			{
				if ((this._thoigianlambai != value))
				{
					this.OnthoigianlambaiChanging(value);
					this.SendPropertyChanging();
					this._thoigianlambai = value;
					this.SendPropertyChanged("thoigianlambai");
					this.OnthoigianlambaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_HocSinhThamGia", Storage="_DeThi", ThisKey="dethiid", OtherKey="id", IsForeignKey=true)]
		public DeThi DeThi
		{
			get
			{
				return this._DeThi.Entity;
			}
			set
			{
				DeThi previousValue = this._DeThi.Entity;
				if (((previousValue != value) 
							|| (this._DeThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeThi.Entity = null;
						previousValue.HocSinhThamGias.Remove(this);
					}
					this._DeThi.Entity = value;
					if ((value != null))
					{
						value.HocSinhThamGias.Add(this);
						this._dethiid = value.id;
					}
					else
					{
						this._dethiid = default(int);
					}
					this.SendPropertyChanged("DeThi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_HocSinhThamGia", Storage="_TaiKhoan", ThisKey="hocsinhid", OtherKey="id", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.HocSinhThamGias.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.HocSinhThamGias.Add(this);
						this._hocsinhid = value.id;
					}
					else
					{
						this._hocsinhid = default(int);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KyThi")]
	public partial class KyThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tenkythi;
		
		private EntitySet<DeThi> _DeThis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntenkythiChanging(string value);
    partial void OntenkythiChanged();
    #endregion
		
		public KyThi()
		{
			this._DeThis = new EntitySet<DeThi>(new Action<DeThi>(this.attach_DeThis), new Action<DeThi>(this.detach_DeThis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenkythi", DbType="NVarChar(255)")]
		public string tenkythi
		{
			get
			{
				return this._tenkythi;
			}
			set
			{
				if ((this._tenkythi != value))
				{
					this.OntenkythiChanging(value);
					this.SendPropertyChanging();
					this._tenkythi = value;
					this.SendPropertyChanged("tenkythi");
					this.OntenkythiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KyThi_DeThi", Storage="_DeThis", ThisKey="id", OtherKey="kythiid")]
		public EntitySet<DeThi> DeThis
		{
			get
			{
				return this._DeThis;
			}
			set
			{
				this._DeThis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DeThis(DeThi entity)
		{
			this.SendPropertyChanging();
			entity.KyThi = this;
		}
		
		private void detach_DeThis(DeThi entity)
		{
			this.SendPropertyChanging();
			entity.KyThi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LopHoc")]
	public partial class LopHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tenlop;
		
		private System.Nullable<int> _caphocid;
		
		private EntitySet<TaiKhoan> _TaiKhoans;
		
		private EntityRef<CapHoc> _CapHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntenlopChanging(string value);
    partial void OntenlopChanged();
    partial void OncaphocidChanging(System.Nullable<int> value);
    partial void OncaphocidChanged();
    #endregion
		
		public LopHoc()
		{
			this._TaiKhoans = new EntitySet<TaiKhoan>(new Action<TaiKhoan>(this.attach_TaiKhoans), new Action<TaiKhoan>(this.detach_TaiKhoans));
			this._CapHoc = default(EntityRef<CapHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenlop", DbType="NVarChar(255)")]
		public string tenlop
		{
			get
			{
				return this._tenlop;
			}
			set
			{
				if ((this._tenlop != value))
				{
					this.OntenlopChanging(value);
					this.SendPropertyChanging();
					this._tenlop = value;
					this.SendPropertyChanged("tenlop");
					this.OntenlopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caphocid", DbType="Int")]
		public System.Nullable<int> caphocid
		{
			get
			{
				return this._caphocid;
			}
			set
			{
				if ((this._caphocid != value))
				{
					if (this._CapHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncaphocidChanging(value);
					this.SendPropertyChanging();
					this._caphocid = value;
					this.SendPropertyChanged("caphocid");
					this.OncaphocidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_TaiKhoan", Storage="_TaiKhoans", ThisKey="id", OtherKey="lophocid")]
		public EntitySet<TaiKhoan> TaiKhoans
		{
			get
			{
				return this._TaiKhoans;
			}
			set
			{
				this._TaiKhoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CapHoc_LopHoc", Storage="_CapHoc", ThisKey="caphocid", OtherKey="id", IsForeignKey=true)]
		public CapHoc CapHoc
		{
			get
			{
				return this._CapHoc.Entity;
			}
			set
			{
				CapHoc previousValue = this._CapHoc.Entity;
				if (((previousValue != value) 
							|| (this._CapHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CapHoc.Entity = null;
						previousValue.LopHocs.Remove(this);
					}
					this._CapHoc.Entity = value;
					if ((value != null))
					{
						value.LopHocs.Add(this);
						this._caphocid = value.id;
					}
					else
					{
						this._caphocid = default(Nullable<int>);
					}
					this.SendPropertyChanged("CapHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc = this;
		}
		
		private void detach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MonHoc")]
	public partial class MonHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tenmonhoc;
		
		private EntitySet<CapHoc_MonHoc> _CapHoc_MonHocs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntenmonhocChanging(string value);
    partial void OntenmonhocChanged();
    #endregion
		
		public MonHoc()
		{
			this._CapHoc_MonHocs = new EntitySet<CapHoc_MonHoc>(new Action<CapHoc_MonHoc>(this.attach_CapHoc_MonHocs), new Action<CapHoc_MonHoc>(this.detach_CapHoc_MonHocs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenmonhoc", DbType="NVarChar(255)")]
		public string tenmonhoc
		{
			get
			{
				return this._tenmonhoc;
			}
			set
			{
				if ((this._tenmonhoc != value))
				{
					this.OntenmonhocChanging(value);
					this.SendPropertyChanging();
					this._tenmonhoc = value;
					this.SendPropertyChanged("tenmonhoc");
					this.OntenmonhocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_CapHoc_MonHoc", Storage="_CapHoc_MonHocs", ThisKey="id", OtherKey="monhocid")]
		public EntitySet<CapHoc_MonHoc> CapHoc_MonHocs
		{
			get
			{
				return this._CapHoc_MonHocs;
			}
			set
			{
				this._CapHoc_MonHocs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CapHoc_MonHocs(CapHoc_MonHoc entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_CapHoc_MonHocs(CapHoc_MonHoc entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
	}
}
#pragma warning restore 1591
